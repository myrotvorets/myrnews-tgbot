name: Build and Push Docker Image

on:
  repository_dispatch:
    types:
      - tests-passed

env:
  IMAGE_NAME: myrotvorets/myrnews-tgbot
  EVENT: ${{ github.event.client_payload.event_name }}

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      refkind: ${{ steps.kind.outputs.kind }}
      reference: ${{ github.event.client_payload.ref }}
      commit: ${{ github.event.client_payload.sha }}
    permissions:
      contents: read
      packages: read
    steps:
      - name: Set image creation timestamp
        run: echo TIMESTAMP="$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3.2.0
        with:
          ref: ${{ github.event.client_payload.sha }}

      - name: Analyze commit info
        id: kind
        uses: myrotvorets/composite-actions/refkind@master
        with:
          ref: ${{ github.event.client_payload.ref }}

      - name: Determine Docker tags
        id: meta
        uses: myrotvorets/composite-actions/docker-tags@master
        with:
          refkind: ${{ steps.kind.outputs.kind }}
          refname: ${{ steps.kind.outputs.name }}
          commit_hash: ${{ github.event.client_payload.sha }}
          image_name: ${{ env.IMAGE_NAME }}
          default_branch: ${{ github.event.repository.default_branch }}

      - name: Login to DockerHub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # tag=v2.1.0
        if: ${{ env.EVENT != 'pull_request' }}
        with:
          username: ${{ secrets.DOCKER_LOGIN }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@8c0edbc76e98fa90f69d9a2c020dcb50019dc325 # tag=v2.2.1

      - run: echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" >> .npmrc

      - name: Build and push
        uses: docker/build-push-action@c56af957549030174b10d6867f20e78cfd7debc5 # tag=v3.2.0
        with:
          push: ${{ env.EVENT != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: .
          file: ./Dockerfile
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.version=${{ steps.meta.outputs.version }}
            org.opencontainers.image.created=${{ env.TIMESTAMP }}
            org.opencontainers.image.revision=${{ github.event.client_payload.sha }}
            org.opencontainers.image.licenses=${{ github.event.repository.license.spdx_id }}

  release:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ needs.build.outputs.refkind == 'tag' }}
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3.2.0
        with:
          ref: ${{ needs.build.outputs.commit }}

      - name: Create a release
        uses: softprops/action-gh-release@de2c0eb89ae2a093876385947365aca7b0e5f844 # v0.1.15
        with:
          generate_release_notes: true
          tag_name: ${{ needs.build.outputs.reference }}
        env:
          GITHUB_TOKEN: ${{ secrets.REPOSITORY_ACCESS_TOKEN }}
